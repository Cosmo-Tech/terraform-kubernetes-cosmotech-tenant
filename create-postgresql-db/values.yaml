image:
  debug: true
auth:
  enablePostgresUser: true
  database: postgres
  existingSecret: ${POSTGRESQL_SECRET_NAME}
  secretKeys:
    adminPasswordKey: postgres-password
primary:
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
    capabilities:
      drop:
        - ALL
    allowPrivilegeEscalation: false
  podSecurityContext:
    enabled: true
    seccompProfile:
      type: RuntimeDefault
  podLabels:
    "networking/traffic-allowed": "yes"
  tolerations:
  - key: "vendor"
    operator: "Equal"
    value: "cosmotech"
    effect: "NoSchedule"
  nodeSelector:
    "cosmotech.com/tier": "db"
  persistence:
    enabled: true
    size: ${PERSISTENCE_SIZE}
  initdb:
    user: postgres
    password: ${POSTGRESQL_PASSWORD}
    scriptsSecret: ${POSTGRESQL_INITDB_SECRET}
resources:
  requests:
    memory: "64Mi"
    cpu: "250m"
  limits:
    memory: "256Mi"
    cpu: "1"
metrics:
  enabled: true
  containerSecurityContext:
    enabled: true
    capabilities:
      drop:
        - ALL
    allowPrivilegeEscalation: false
  serviceMonitor:
    enabled: true
    namespace: ${MONITORING_NAMESPACE}
    interval: 30s
    scrapeTimeout: 10s