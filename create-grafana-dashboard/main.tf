terraform {
  required_providers {
    grafana = {
      source  = "grafana/grafana"
      version = "3.22.0"
    }
  }
}

locals {
  redis_datasource_name = "redis_datasource_${var.namespace}"
  redis_url = "redis://cosmotechredis-${var.namespace}-master.${var.namespace}.svc.cluster.local:${var.redis_port}"

  postgresql_datasource_name = "postgresql_datasource_${var.postgresql_host_namespace}"
  postgresql_url = "jdbc:postgresql://postgresql-${var.postgresql_host_namespace}.${var.postgresql_host_namespace}.svc.cluster.local:${var.postgresql_port}"
}

resource "grafana_data_source" "redis-datasource" {
  name = local.redis_datasource_name
  type = "redis-datasource"

  url  = local.redis_url
  basic_auth_enabled = true
  basic_auth_username = var.redis_auth_user

  secure_json_data_encoded = jsonencode({
    password = var.redis_auth_password
  })
}

resource "grafana_data_source" "postgresql-datasource" {
  name = local.postgresql_datasource_name
  type = "postgresql-datasource"

  url  = local.postgresql_url
  basic_auth_enabled = true
  basic_auth_username = var.postgresql_auth_user

  secure_json_data_encoded = jsonencode({
    password = var.postgresql_auth_password
  })
  database_name = var.postgresql_db
}

resource "grafana_folder" "folder" {
  title = "Tenant ${var.namespace}"
}

resource "grafana_dashboard" "redis_dashboard" {
  folder = grafana_folder.folder.id
  config_json = templatefile("${path.module}/dashboard/redis_dashboard.json", {"title" = "Redis_${var.namespace}", "DATASOURCE_ID" = split(":", grafana_data_source.redis-datasource.id)[1]})
}

resource "grafana_dashboard" "licensing_dashboard" {
  folder = grafana_folder.folder.id
  config_json = templatefile(
      "${path.module}/dashboard/cosmotech_licensing.json",
      {
          "DASHBOARD_TITLE" = "Cosmotech_licencing_${var.namespace}",
          "REDIS_DATASOURCE_ID" = split(":", grafana_data_source.redis-datasource.id)[1],
          "POSTGRESQL_DATASOURCE_ID" = split(":", grafana_data_source.postgresql-datasource.id)[1]
      }
  )
}

output "redis_datasource_id" {
  description = "Redis datasource id generated by Grafana"
  value = grafana_data_source.redis-datasource.id
}

output "postgresql_datasource_id" {
  description = "Postgresql datasource id generated by Grafana"
  value = grafana_data_source.postgresql-datasource.id
}